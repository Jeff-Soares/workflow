name: Pull Request - Build APK

on:
  workflow_dispatch:
    inputs:
      version-suffix:
        description: app versionName suffix
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: 
      - codebuild-workflow-${{ github.run_id }}-${{ github.run_attempt }}
    timeout-minutes: 15

    outputs:
      apk-url: ${{ steps.upload-s3.outputs.apk-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Android Environment
        uses: ./.github/actions/setup-android

      - name: Build APK - STG
        env:
          VERSION_SUFFIX: ${{ inputs.version-suffix }}
          KEYSTORE: ${{ secrets.KEYSTORE }}
        run: ./gradlew clean app:assembleStagingRelease

      - name: Upload artifact
        id: upload-s3
        uses: ./.github/actions/upload-s3
        with:
          bucket: android-s3-tests
          key: app-staging-release-$VERSION_SUFFIX.apk
          path: app/build/outputs/apk/staging/release/app-staging-release.apk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_SUFFIX: ${{ inputs.version-suffix }}

  deploy-firebase:
    runs-on: ubuntu-latest
    needs: build
    env:
      VERSION_SUFFIX: ${{ inputs.version-suffix }}
      GOOGLE_APPLICATION_CREDENTIALS: firebase_credential.json
      FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

    steps:
      - name: Download artifact
        run: curl ${{ needs.build.outputs.apk-url }} -o app-staging-release-$VERSION_SUFFIX.apk

      - name: Setup firebase CLI
        run: |
          echo $FIREBASE_CREDENTIALS > $GOOGLE_APPLICATION_CREDENTIALS
          if ! [ -x "$(command -v firebase)" ]; then
            curl -sL https://firebase.tools | bash
          fi

      - name: Upload to firebase app distribution
        run: |
          firebase appdistribution:distribute app-staging-release-$VERSION_SUFFIX.apk \
            --app ${{ vars.FIREBASE_APP_ID }} \
            --groups "dev, qa"
